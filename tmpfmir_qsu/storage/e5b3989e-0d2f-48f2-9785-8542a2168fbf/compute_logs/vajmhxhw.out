2025-01-23 19:39:47 [46mplatform[0m > Using job log path: /workspace/189/0/logs.log
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.m.Stage(apply):39 - APPLY Stage: CLAIM â€” (workloadId = 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync) â€” (dataplaneId = local)
2025-01-23 19:40:32 [32mINFO[m i.m.r.Micronaut(start):101 - Startup completed in 2310ms. Server Running: http://replication-job-189-attempt-0:9000
2025-01-23 19:40:32 [46mreplication-orchestrator[0m > Setting up source...
2025-01-23 19:40:32 [32mINFO[m i.a.f.ConfigFileClient(<init>):113 - path /flags does not exist, will return default flag values
2025-01-23 19:40:32 [33mWARN[m i.a.m.l.MetricClientFactory(initialize):72 - MetricClient was not recognized or not provided. Accepted values are `datadog` or `otel`. 
2025-01-23 19:40:46 [32mINFO[m i.a.a.SegmentAnalyticsClient(close):232 - Closing Segment analytics client...
2025-01-23 19:40:46 [32mINFO[m i.a.a.BlockingShutdownAnalyticsPlugin(waitForFlush):288 - Waiting for Segment analytic client to flush enqueued messages...
2025-01-23 19:40:46 [32mINFO[m i.a.a.BlockingShutdownAnalyticsPlugin(waitForFlush):300 - Segment analytic client flush complete.
2025-01-23 19:40:46 [32mINFO[m i.a.a.SegmentAnalyticsClient(close):236 - Segment analytics client closed.  No new events will be accepted.
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Setting up destination...
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Setting up replication worker...
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > starting state flush thread for connectionId 3047bed9-ebfe-4d09-9ab1-3e8364ba0097
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Using ClosableLinkedBlockingQueue
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Using ClosableLinkedBlockingQueue
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Running replication worker...
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > start sync worker. job id: 189 attempt id: 0
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > 
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > ----- START REPLICATION -----
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > 
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Number of Resumed Full Refresh Streams: {0}
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Running destination...
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Writing messages to protocol version 0.2.0
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Reading messages from protocol version 0.2.0
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Reading messages from protocol version 0.2.0
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Starting workload heartbeat
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > readFromSource: start
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > Starting source heartbeat check. Will check threshold of 10800 seconds, every 1 minutes.
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > processMessage: start
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > readFromDestination: start
2025-01-23 19:40:33 [46mreplication-orchestrator[0m > writeToDestination: start
2025-01-23 19:40:33 [43mdestination[0m > INFO main i.a.i.d.p.PostgresDestination$Companion(main):219 starting destination: class io.airbyte.integrations.destination.postgres.PostgresDestination
2025-01-23 19:40:33 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationCliParser$Companion(parseOptions):144 integration args: {catalog=/dest/catalog.json, write=null, config=/dest/connectorConfig.json}
2025-01-23 19:40:33 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):130 Running integration: io.airbyte.cdk.integrations.base.ssh.SshWrappedDestination
2025-01-23 19:40:33 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):131 Command: WRITE
2025-01-23 19:40:33 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):132 Integration config: IntegrationConfig{command=WRITE, configPath='/dest/connectorConfig.json', catalogPath='/dest/catalog.json', statePath='null'}
2025-01-23 19:40:34 [43mdestination[0m > WARN main c.n.s.UnknownKeywordFactory(lambda$getKeyword$0):37 Unknown keyword order - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword or if it should generate annotations AnnotationKeyword
2025-01-23 19:40:34 [43mdestination[0m > WARN main c.n.s.UnknownKeywordFactory(lambda$getKeyword$0):37 Unknown keyword airbyte_secret - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword or if it should generate annotations AnnotationKeyword
2025-01-23 19:40:34 [43mdestination[0m > WARN main c.n.s.UnknownKeywordFactory(lambda$getKeyword$0):37 Unknown keyword multiline - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword or if it should generate annotations AnnotationKeyword
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.b.s.SshWrappedDestination(getSerializedMessageConsumer):112 No SSH connection options found, using defaults
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.b.s.SshTunnel$Companion(getInstance):423 Starting connection with method: NO_TUNNEL
2025-01-23 19:40:34 [43mdestination[0m > INFO main c.z.h.HikariDataSource(<init>):79 HikariPool-1 - Starting...
2025-01-23 19:40:34 [43mdestination[0m > INFO main c.z.h.HikariDataSource(<init>):81 HikariPool-1 - Start completed.
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.i.b.d.t.CatalogParser(parseCatalog):132 Running sync with stream configs: [StreamConfig(id=StreamId(finalNamespace=source, finalName=movies, rawNamespace=airbyte_internal, rawName=source_raw__stream_movies, originalNamespace=source, originalName=movies), postImportAction=DEDUPE, primaryKey=[ColumnId(name=id, originalName=id, canonicalName=id)], cursor=Optional.empty, columns={ColumnId(name=id, originalName=id, canonicalName=id)=NUMBER, ColumnId(name=War, originalName=War, canonicalName=War)=NUMBER, ColumnId(name=Name, originalName=Name, canonicalName=Name)=STRING, ColumnId(name=Crime, originalName=Crime, canonicalName=Crime)=NUMBER, ColumnId(name=Drama, originalName=Drama, canonicalName=Drama)=NUMBER, ColumnId(name=index, originalName=index, canonicalName=index)=NUMBER, ColumnId(name=Action, originalName=Action, canonicalName=Action)=NUMBER, ColumnId(name=Comedy, originalName=Comedy, canonicalName=Comedy)=NUMBER, ColumnId(name=Horror, originalName=Horror, canonicalName=Horror)=NUMBER, ColumnId(name=Sci_Fi, originalName=Sci-Fi, canonicalName=Sci_Fi)=NUMBER, ColumnId(name=Fantasy, originalName=Fantasy, canonicalName=Fantasy)=NUMBER, ColumnId(name=Musical, originalName=Musical, canonicalName=Musical)=NUMBER, ColumnId(name=Mystery, originalName=Mystery, canonicalName=Mystery)=NUMBER, ColumnId(name=Romance, originalName=Romance, canonicalName=Romance)=NUMBER, ColumnId(name=Western, originalName=Western, canonicalName=Western)=NUMBER, ColumnId(name=unknown, originalName=unknown, canonicalName=unknown)=NUMBER, ColumnId(name=IMDB_URL, originalName=IMDB URL, canonicalName=IMDB_URL)=STRING, ColumnId(name=Thriller, originalName=Thriller, canonicalName=Thriller)=NUMBER, ColumnId(name=Adventure, originalName=Adventure, canonicalName=Adventure)=NUMBER, ColumnId(name=Animation, originalName=Animation, canonicalName=Animation)=NUMBER, ColumnId(name=Film_Noir, originalName=Film-Noir, canonicalName=Film_Noir)=NUMBER, ColumnId(name=Children_s, originalName=Children's, canonicalName=Children_s)=NUMBER, ColumnId(name=Documentary, originalName=Documentary, canonicalName=Documentary)=NUMBER, ColumnId(name=Release_Date, originalName=Release Date, canonicalName=Release_Date)=STRING}, generationId=70, minimumGenerationId=70, syncId=189)]
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.d.a.b.BufferManager(<init>):48 Max 'memory' available for buffer allocation 614 MB
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner$Companion(consumeWriteStream$io_airbyte_airbyte_cdk_java_airbyte_cdk_airbyte_cdk_core):406 Starting buffered read of input stream
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(start):73 Start async buffer supervisor
2025-01-23 19:40:34 [43mdestination[0m > INFO pool-3-thread-1 i.a.c.i.d.a.b.BufferManager(printQueueInfo):94 [ASYNC QUEUE INFO] Global: max: 614.4 MB, allocated: 10 MB (10.0 MB), %% used: 0.016276041676772164 | State Manager memory usage: Allocated: 10 MB, Used: 0 bytes, percentage Used 0.0
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.d.a.AsyncStreamConsumer(start):89 class io.airbyte.cdk.integrations.destination.async.AsyncStreamConsumer started.
2025-01-23 19:40:34 [43mdestination[0m > INFO pool-6-thread-1 i.a.c.i.d.a.FlushWorkers(printWorkerInfo):127 [ASYNC WORKER INFO] Pool queue size: 0, Active threads: 0
2025-01-23 19:40:34 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 340164d6-30bb-406a-94d5-b1717ae7de96-627ad8d4-5e27-4c59-bbc0-c8fb2625a2d6: [create schema if not exists "airbyte_internal";]
[create schema if not exists "source";]
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: create schema if not exists "airbyte_internal";
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: create schema if not exists "airbyte_internal";
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 340164d6-30bb-406a-94d5-b1717ae7de96-627ad8d4-5e27-4c59-bbc0-c8fb2625a2d6 completed in 517 ms
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 340164d6-30bb-406a-94d5-b1717ae7de96-ad385aec-970e-49aa-b277-1810b7f386f1: [create schema if not exists "airbyte_internal";]
[create schema if not exists "source";]
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: create schema if not exists "source";
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: create schema if not exists "source";
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 340164d6-30bb-406a-94d5-b1717ae7de96-ad385aec-970e-49aa-b277-1810b7f386f1 completed in 4 ms
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(migrateIfNecessary):19 Assessing whether migration is necessary for stream movies
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(shouldMigrate):43 Checking whether v1 raw table _airbyte_raw_movies in dataset source exists
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):540 Retrieving existing columns for mlops.airbyte_internal.source_raw__stream_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):540 Retrieving existing columns for mlops.source._airbyte_raw_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(shouldMigrate):50 Migration Info: Required for Sync mode: false, No existing v2 raw tables: false, A v1 raw table exists: false
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(migrateIfNecessary):30 No Migration Required for stream: movies
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: create table if not exists "airbyte_internal"."_airbyte_destination_state" ("name" varchar, "namespace" varchar, "destination_state" varchar, "updated_at" timestamp with time zone)
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):540 Retrieving existing columns for mlops.source.movies
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.i.d.j.t.JdbcDestinationHandler(getInitialRawTableState$lambda$1):95 Retrieving table from Db metadata: mlops airbyte_internal source_raw__stream_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.i.d.j.t.JdbcDestinationHandler(getInitialRawTableState$lambda$1):95 Retrieving table from Db metadata: mlops airbyte_internal source_raw__stream_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.i.d.p.PostgresGenerationHandler(getGenerationIdInTable):48 found generationId in table airbyte_internal.source_raw__stream_movies: 69
2025-01-23 19:40:35 [43mdestination[0m > INFO ForkJoinPool.commonPool-worker-1 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.TyperDeduperUtil(runMigrationsAsync$lambda$12):165 Maybe executing PostgresRawTableAirbyteMetaMigration migration for stream source.movies.
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):540 Retrieving existing columns for mlops.airbyte_internal.source_raw__stream_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.TyperDeduperUtil(runMigrationsAsync$lambda$12):165 Maybe executing PostgresGenerationIdMigration migration for stream source.movies.
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):540 Retrieving existing columns for mlops.airbyte_internal.source_raw__stream_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.g.o.k.KLogger$DefaultImpls(info):534 Skipping migration for airbyte_internal.source_raw__stream_movies's raw table because the generation_id column is already present
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):540 Retrieving existing columns for mlops.source.movies
2025-01-23 19:40:35 [43mdestination[0m > INFO type-and-dedupe i.g.o.k.KLogger$DefaultImpls(info):534 Skipping migration for source.movies because the generation_id column is already present
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: delete from "airbyte_internal"."_airbyte_destination_state" where ("name" = 'movies' and "namespace" = 'source')
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: delete from "airbyte_internal"."_airbyte_destination_state" where ("name" = 'movies' and "namespace" = 'source')
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: insert into "airbyte_internal"."_airbyte_destination_state" ("name", "namespace", "destination_state", "updated_at") values ('movies', 'source', '{"needsSoftReset":false,"airbyteMetaPresentInRaw":true,"airbyteGenerationIdPresent":true}', '2025-01-23T19:40:35.941932635Z')
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: insert into "airbyte_internal"."_airbyte_destination_state" ("name", "namespace", "destination_state", "updated_at") values ('movies', 'source', '{"needsSoftReset":false,"airbyteMetaPresentInRaw":true,"airbyteGenerationIdPresent":true}', '2025-01-23T19:40:35.941932635Z')
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.i.d.p.PostgresGenerationHandler(getGenerationIdInTable):48 found generationId in table airbyte_internal.source_raw__stream_movies: 69
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.JdbcBufferedConsumerFactory(onStartFunction$lambda$2):184 Preparing raw tables in destination started for 1 streams
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.JdbcBufferedConsumerFactory(onStartFunction$lambda$2):191 Preparing raw table in destination started for stream movies. schema: airbyte_internal, table name: source_raw__stream_movies
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE SCHEMA IF NOT EXISTS airbyte_internal;
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE TABLE IF NOT EXISTS airbyte_internal.source_raw__stream_movies (
  _airbyte_raw_id VARCHAR PRIMARY KEY,
  _airbyte_data JSONB,
  _airbyte_extracted_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  _airbyte_loaded_at TIMESTAMP WITH TIME ZONE DEFAULT NULL,
  _airbyte_meta JSONB,
  _airbyte_generation_id BIGINT
);

2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:35 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE INDEX IF NOT EXISTS source_raw__stream_movies_raw_id ON airbyte_internal.source_raw__stream_movies(_airbyte_raw_id)
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE INDEX IF NOT EXISTS source_raw__stream_movies_extracted_at ON airbyte_internal.source_raw__stream_movies(_airbyte_extracted_at)
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE INDEX IF NOT EXISTS source_raw__stream_movies_loaded_at ON airbyte_internal.source_raw__stream_movies(_airbyte_loaded_at, _airbyte_extracted_at)
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE TABLE IF NOT EXISTS airbyte_internal.source_raw__stream_movies_airbyte_tmp (
  _airbyte_raw_id VARCHAR PRIMARY KEY,
  _airbyte_data JSONB,
  _airbyte_extracted_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  _airbyte_loaded_at TIMESTAMP WITH TIME ZONE DEFAULT NULL,
  _airbyte_meta JSONB,
  _airbyte_generation_id BIGINT
);

2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE INDEX IF NOT EXISTS source_raw__stream_movies_airbyte_tmp_raw_id ON airbyte_internal.source_raw__stream_movies_airbyte_tmp(_airbyte_raw_id)
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE INDEX IF NOT EXISTS source_raw__stream_movies_airbyte_tmp_extracted_at ON airbyte_internal.source_raw__stream_movies_airbyte_tmp(_airbyte_extracted_at)
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: CREATE INDEX IF NOT EXISTS source_raw__stream_movies_airbyte_tmp_loaded_at ON airbyte_internal.source_raw__stream_movies_airbyte_tmp(_airbyte_loaded_at, _airbyte_extracted_at)
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):50 executing statement: BEGIN;
TRUNCATE TABLE airbyte_internal.source_raw__stream_movies_airbyte_tmp;
COMMIT;
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(execute$lambda$0):54 statement successfully executed
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.i.d.j.JdbcBufferedConsumerFactory(onStartFunction$lambda$2):227 Preparing raw tables in destination completed.
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(prepareFinalTables):124 Preparing tables
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(prepareTablesFuture$lambda$4):157 Final Table exists for stream movies
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(prepareTablesFuture$lambda$4):166 Using temp final table
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(prepareTablesFuture$lambda$4):174 Recreating temp final table
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 4c68ab63-8c50-4937-9404-ea992ed7174b-ade11e10-5339-46a7-b2ed-8d4965c30e0b: [drop table if exists "source"."movies_airbyte_tmp";, create table "source"."movies_airbyte_tmp" ("id" decimal(38, 9), "War" decimal(38, 9), "Name" varchar, "Crime" decimal(38, 9), "Drama" decimal(38, 9), "index" decimal(38, 9), "Action" decimal(38, 9), "Comedy" decimal(38, 9), "Horror" decimal(38, 9), "Sci_Fi" decimal(38, 9), "Fantasy" decimal(38, 9), "Musical" decimal(38, 9), "Mystery" decimal(38, 9), "Romance" decimal(38, 9), "Western" decimal(38, 9), "unknown" decimal(38, 9), "IMDB_URL" varchar, "Thriller" decimal(38, 9), "Adventure" decimal(38, 9), "Animation" decimal(38, 9), "Film_Noir" decimal(38, 9), "Children_s" decimal(38, 9), "Documentary" decimal(38, 9), "Release_Date" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_generation_id" bigint, "_airbyte_meta" jsonb not null);]
[create index on "source"."movies_airbyte_tmp"("id", "_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_raw_id");]
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: drop table if exists "source"."movies_airbyte_tmp";
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: drop table if exists "source"."movies_airbyte_tmp";
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: create table "source"."movies_airbyte_tmp" ("id" decimal(38, 9), "War" decimal(38, 9), "Name" varchar, "Crime" decimal(38, 9), "Drama" decimal(38, 9), "index" decimal(38, 9), "Action" decimal(38, 9), "Comedy" decimal(38, 9), "Horror" decimal(38, 9), "Sci_Fi" decimal(38, 9), "Fantasy" decimal(38, 9), "Musical" decimal(38, 9), "Mystery" decimal(38, 9), "Romance" decimal(38, 9), "Western" decimal(38, 9), "unknown" decimal(38, 9), "IMDB_URL" varchar, "Thriller" decimal(38, 9), "Adventure" decimal(38, 9), "Animation" decimal(38, 9), "Film_Noir" decimal(38, 9), "Children_s" decimal(38, 9), "Documentary" decimal(38, 9), "Release_Date" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_generation_id" bigint, "_airbyte_meta" jsonb not null);
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: create table "source"."movies_airbyte_tmp" ("id" decimal(38, 9), "War" decimal(38, 9), "Name" varchar, "Crime" decimal(38, 9), "Drama" decimal(38, 9), "index" decimal(38, 9), "Action" decimal(38, 9), "Comedy" decimal(38, 9), "Horror" decimal(38, 9), "Sci_Fi" decimal(38, 9), "Fantasy" decimal(38, 9), "Musical" decimal(38, 9), "Mystery" decimal(38, 9), "Romance" decimal(38, 9), "Western" decimal(38, 9), "unknown" decimal(38, 9), "IMDB_URL" varchar, "Thriller" decimal(38, 9), "Adventure" decimal(38, 9), "Animation" decimal(38, 9), "Film_Noir" decimal(38, 9), "Children_s" decimal(38, 9), "Documentary" decimal(38, 9), "Release_Date" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_generation_id" bigint, "_airbyte_meta" jsonb not null);
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 4c68ab63-8c50-4937-9404-ea992ed7174b-ade11e10-5339-46a7-b2ed-8d4965c30e0b completed in 22 ms
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 4c68ab63-8c50-4937-9404-ea992ed7174b-0fa6c6c6-c71f-466b-a895-685d68bd91aa: [drop table if exists "source"."movies_airbyte_tmp";, create table "source"."movies_airbyte_tmp" ("id" decimal(38, 9), "War" decimal(38, 9), "Name" varchar, "Crime" decimal(38, 9), "Drama" decimal(38, 9), "index" decimal(38, 9), "Action" decimal(38, 9), "Comedy" decimal(38, 9), "Horror" decimal(38, 9), "Sci_Fi" decimal(38, 9), "Fantasy" decimal(38, 9), "Musical" decimal(38, 9), "Mystery" decimal(38, 9), "Romance" decimal(38, 9), "Western" decimal(38, 9), "unknown" decimal(38, 9), "IMDB_URL" varchar, "Thriller" decimal(38, 9), "Adventure" decimal(38, 9), "Animation" decimal(38, 9), "Film_Noir" decimal(38, 9), "Children_s" decimal(38, 9), "Documentary" decimal(38, 9), "Release_Date" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_generation_id" bigint, "_airbyte_meta" jsonb not null);]
[create index on "source"."movies_airbyte_tmp"("id", "_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_raw_id");]
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: create index on "source"."movies_airbyte_tmp"("id", "_airbyte_extracted_at");
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: create index on "source"."movies_airbyte_tmp"("id", "_airbyte_extracted_at");
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 4c68ab63-8c50-4937-9404-ea992ed7174b-0fa6c6c6-c71f-466b-a895-685d68bd91aa completed in 18 ms
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 4c68ab63-8c50-4937-9404-ea992ed7174b-18b3f6c3-bf28-478e-b5d5-e65615355216: [drop table if exists "source"."movies_airbyte_tmp";, create table "source"."movies_airbyte_tmp" ("id" decimal(38, 9), "War" decimal(38, 9), "Name" varchar, "Crime" decimal(38, 9), "Drama" decimal(38, 9), "index" decimal(38, 9), "Action" decimal(38, 9), "Comedy" decimal(38, 9), "Horror" decimal(38, 9), "Sci_Fi" decimal(38, 9), "Fantasy" decimal(38, 9), "Musical" decimal(38, 9), "Mystery" decimal(38, 9), "Romance" decimal(38, 9), "Western" decimal(38, 9), "unknown" decimal(38, 9), "IMDB_URL" varchar, "Thriller" decimal(38, 9), "Adventure" decimal(38, 9), "Animation" decimal(38, 9), "Film_Noir" decimal(38, 9), "Children_s" decimal(38, 9), "Documentary" decimal(38, 9), "Release_Date" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_generation_id" bigint, "_airbyte_meta" jsonb not null);]
[create index on "source"."movies_airbyte_tmp"("id", "_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_raw_id");]
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: create index on "source"."movies_airbyte_tmp"("_airbyte_extracted_at");
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: create index on "source"."movies_airbyte_tmp"("_airbyte_extracted_at");
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 4c68ab63-8c50-4937-9404-ea992ed7174b-18b3f6c3-bf28-478e-b5d5-e65615355216 completed in 9 ms
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 4c68ab63-8c50-4937-9404-ea992ed7174b-0b3b3e54-1ffb-458c-ba62-d00a7b34f6e2: [drop table if exists "source"."movies_airbyte_tmp";, create table "source"."movies_airbyte_tmp" ("id" decimal(38, 9), "War" decimal(38, 9), "Name" varchar, "Crime" decimal(38, 9), "Drama" decimal(38, 9), "index" decimal(38, 9), "Action" decimal(38, 9), "Comedy" decimal(38, 9), "Horror" decimal(38, 9), "Sci_Fi" decimal(38, 9), "Fantasy" decimal(38, 9), "Musical" decimal(38, 9), "Mystery" decimal(38, 9), "Romance" decimal(38, 9), "Western" decimal(38, 9), "unknown" decimal(38, 9), "IMDB_URL" varchar, "Thriller" decimal(38, 9), "Adventure" decimal(38, 9), "Animation" decimal(38, 9), "Film_Noir" decimal(38, 9), "Children_s" decimal(38, 9), "Documentary" decimal(38, 9), "Release_Date" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_generation_id" bigint, "_airbyte_meta" jsonb not null);]
[create index on "source"."movies_airbyte_tmp"("id", "_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_extracted_at");]
[create index on "source"."movies_airbyte_tmp"("_airbyte_raw_id");]
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: create index on "source"."movies_airbyte_tmp"("_airbyte_raw_id");
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: create index on "source"."movies_airbyte_tmp"("_airbyte_raw_id");
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 4c68ab63-8c50-4937-9404-ea992ed7174b-0b3b3e54-1ffb-458c-ba62-d00a7b34f6e2 completed in 8 ms
2025-01-23 19:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(prepareTablesFuture$lambda$4):184 Using temp final table for stream movies, will overwrite existing table at end of sync
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: delete from "airbyte_internal"."_airbyte_destination_state" where ("name" = 'movies' and "namespace" = 'source')
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: delete from "airbyte_internal"."_airbyte_destination_state" where ("name" = 'movies' and "namespace" = 'source')
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: insert into "airbyte_internal"."_airbyte_destination_state" ("name", "namespace", "destination_state", "updated_at") values ('movies', 'source', '{"needsSoftReset":false,"airbyteMetaPresentInRaw":true,"airbyteGenerationIdPresent":true}', '2025-01-23T19:40:36.179256427Z')
2025-01-23 19:40:36 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: insert into "airbyte_internal"."_airbyte_destination_state" ("name", "namespace", "destination_state", "updated_at") values ('movies', 'source', '{"needsSoftReset":false,"airbyteMetaPresentInRaw":true,"airbyteGenerationIdPresent":true}', '2025-01-23T19:40:36.179256427Z')
2025-01-23 19:40:36 [44msource[0m > Syncing stream: movies (https://raw.githubusercontent.com/mlops-itba/Datos-RS/main/data/peliculas_0.csv)...
2025-01-23 19:40:36 [44msource[0m > TransportParams: None
2025-01-23 19:40:36 [46mreplication-orchestrator[0m > Stream status TRACE received of status: STARTED for stream movies
2025-01-23 19:40:36 [46mreplication-orchestrator[0m > Sending update for movies - null -> RUNNING
2025-01-23 19:40:36 [46mreplication-orchestrator[0m > Stream Status Update Received: movies - RUNNING
2025-01-23 19:40:36 [46mreplication-orchestrator[0m > Creating status: movies - RUNNING
2025-01-23 19:40:36 [44msource[0m > Marking stream movies as RUNNING
2025-01-23 19:40:36 [46mreplication-orchestrator[0m > Stream status TRACE received of status: RUNNING for stream movies
2025-01-23 19:40:37 [44msource[0m > Marking stream movies as STOPPED
2025-01-23 19:40:37 [46mreplication-orchestrator[0m > Stream status TRACE received of status: COMPLETE for stream movies
2025-01-23 19:40:38 [46mreplication-orchestrator[0m > Total records read: 1347 (508 KB)
2025-01-23 19:40:38 [46mreplication-orchestrator[0m > Schema validation was performed to a max of 10 records with errors per stream.
2025-01-23 19:40:38 [46mreplication-orchestrator[0m > readFromSource: done. (source.isFinished:true, fromSource.isClosed:false)
2025-01-23 19:40:38 [46mreplication-orchestrator[0m > thread status... heartbeat thread: false , replication thread: true
2025-01-23 19:40:42 [46mreplication-orchestrator[0m > processMessage: done. (fromSource.isDone:true, forDest.isClosed:false)
2025-01-23 19:40:43 [46mreplication-orchestrator[0m > writeToDestination: done. (forDest.isDone:true, isDestRunning:true)
2025-01-23 19:40:43 [46mreplication-orchestrator[0m > thread status... timeout thread: false , replication thread: true
2025-01-23 19:40:43 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner$Companion(consumeWriteStream$io_airbyte_airbyte_cdk_java_airbyte_cdk_airbyte_cdk_core):428 Finished buffered read of input stream
2025-01-23 19:40:43 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):193 Closing flush workers -- waiting for all buffers to flush
2025-01-23 19:40:43 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):226 REMAINING_BUFFERS_INFO
  Namespace: null Stream: movies -- remaining records: 1344
2025-01-23 19:40:43 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):227 Waiting for all streams to flush.
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-5-thread-1 i.a.c.i.d.a.DetectStreamToFlush(getNextStreamToFlush):109 flushing: trigger info: null - movies, time trigger: false , size trigger: true current threshold b: 0 bytes, queue size b: 720.29 KB, penalty b: 0 bytes, after penalty b: 720.29 KB
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):135 Flush Worker (7ed66) -- Worker picked up work.
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):141 Flush Worker (7ed66) -- Attempting to read from queue namespace: null, stream: movies.
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 9748180 bytes..
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):159 Flush Worker (7ed66) -- Batch contains: 1344 records, 720.29 KB bytes.
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.i.d.p.PostgresSqlOperations(insertRecordsInternal):104 preparing records to insert. generationId=70, syncId=189
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.i.d.p.PostgresSqlOperations(insertRecordsInternal$lambda$0):122 executing COPY command: COPY airbyte_internal.source_raw__stream_movies_airbyte_tmp (_airbyte_raw_id, _airbyte_data, _airbyte_extracted_at, _airbyte_loaded_at, _airbyte_meta, _airbyte_generation_id) FROM stdin DELIMITER ',' CSV
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.i.d.p.PostgresSqlOperations(insertRecordsInternal):137 COPY command completed sucessfully
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):153 Flushing states
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):207 Flushing states complete
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 0 bytes..
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 737580 bytes..
2025-01-23 19:40:43 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):170 Flush Worker (7ed66) -- Worker finished flushing. Current queue size: 0
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):230 Closing flush workers -- all buffers flushed
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):153 Flushing states
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):207 Flushing states complete
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 0 bytes..
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):238 Closing flush workers -- supervisor shut down
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):240 Closing flush workers -- Starting worker pool shutdown..
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):245 Closing flush workers  -- workers shut down
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.i.d.a.b.BufferManager(close):73 Buffers cleared..
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):127 closing connection
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.i.d.p.PostgresGenerationHandler(getGenerationIdInTable):48 found generationId in table airbyte_internal.source_raw__stream_movies: 69
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: DROP TABLE airbyte_internal.source_raw__stream_movies 
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: DROP TABLE airbyte_internal.source_raw__stream_movies 
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: ALTER TABLE airbyte_internal.source_raw__stream_movies_airbyte_tmp RENAME TO source_raw__stream_movies
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: ALTER TABLE airbyte_internal.source_raw__stream_movies_airbyte_tmp RENAME TO source_raw__stream_movies
2025-01-23 19:40:44 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(typeAndDedupe):309 Typing and deduping all tables
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.TyperDeduperUtil(executeTypeAndDedupe):212 Attempting typing and deduping for source.movies with suffix _airbyte_tmp
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql 37b5bc6c-d796-4082-92a6-feec0b408fee-8c1fbd3f-e331-4331-a6a3-6b91234f889d: [insert into "source"."movies_airbyte_tmp" ("id", "War", "Name", "Crime", "Drama", "index", "Action", "Comedy", "Horror", "Sci_Fi", "Fantasy", "Musical", "Mystery", "Romance", "Western", "unknown", "IMDB_URL", "Thriller", "Adventure", "Animation", "Film_Noir", "Children_s", "Documentary", "Release_Date", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_generation_id", "_airbyte_meta") with "intermediate_data" as (select cast(case when ("_airbyte_data" -> 'id' is null or JSONB_TYPEOF("_airbyte_data" -> 'id') = 'null') then null else cast("_airbyte_data" -> 'id' as varchar) end as decimal(38, 9)) as "id", cast(case when ("_airbyte_data" -> 'War' is null or JSONB_TYPEOF("_airbyte_data" -> 'War') = 'null') then null else cast("_airbyte_data" -> 'War' as varchar) end as decimal(38, 9)) as "War", "_airbyte_data" -> 'Name' #>> '{}' as "Name", cast(case when ("_airbyte_data" -> 'Crime' is null or JSONB_TYPEOF("_airbyte_data" -> 'Crime') = 'null') then null else cast("_airbyte_data" -> 'Crime' as varchar) end as decimal(38, 9)) as "Crime", cast(case when ("_airbyte_data" -> 'Drama' is null or JSONB_TYPEOF("_airbyte_data" -> 'Drama') = 'null') then null else cast("_airbyte_data" -> 'Drama' as varchar) end as decimal(38, 9)) as "Drama", cast(case when ("_airbyte_data" -> 'index' is null or JSONB_TYPEOF("_airbyte_data" -> 'index') = 'null') then null else cast("_airbyte_data" -> 'index' as varchar) end as decimal(38, 9)) as "index", cast(case when ("_airbyte_data" -> 'Action' is null or JSONB_TYPEOF("_airbyte_data" -> 'Action') = 'null') then null else cast("_airbyte_data" -> 'Action' as varchar) end as decimal(38, 9)) as "Action", cast(case when ("_airbyte_data" -> 'Comedy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Comedy') = 'null') then null else cast("_airbyte_data" -> 'Comedy' as varchar) end as decimal(38, 9)) as "Comedy", cast(case when ("_airbyte_data" -> 'Horror' is null or JSONB_TYPEOF("_airbyte_data" -> 'Horror') = 'null') then null else cast("_airbyte_data" -> 'Horror' as varchar) end as decimal(38, 9)) as "Horror", cast(case when ("_airbyte_data" -> 'Sci-Fi' is null or JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') = 'null') then null else cast("_airbyte_data" -> 'Sci-Fi' as varchar) end as decimal(38, 9)) as "Sci_Fi", cast(case when ("_airbyte_data" -> 'Fantasy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') = 'null') then null else cast("_airbyte_data" -> 'Fantasy' as varchar) end as decimal(38, 9)) as "Fantasy", cast(case when ("_airbyte_data" -> 'Musical' is null or JSONB_TYPEOF("_airbyte_data" -> 'Musical') = 'null') then null else cast("_airbyte_data" -> 'Musical' as varchar) end as decimal(38, 9)) as "Musical", cast(case when ("_airbyte_data" -> 'Mystery' is null or JSONB_TYPEOF("_airbyte_data" -> 'Mystery') = 'null') then null else cast("_airbyte_data" -> 'Mystery' as varchar) end as decimal(38, 9)) as "Mystery", cast(case when ("_airbyte_data" -> 'Romance' is null or JSONB_TYPEOF("_airbyte_data" -> 'Romance') = 'null') then null else cast("_airbyte_data" -> 'Romance' as varchar) end as decimal(38, 9)) as "Romance", cast(case when ("_airbyte_data" -> 'Western' is null or JSONB_TYPEOF("_airbyte_data" -> 'Western') = 'null') then null else cast("_airbyte_data" -> 'Western' as varchar) end as decimal(38, 9)) as "Western", cast(case when ("_airbyte_data" -> 'unknown' is null or JSONB_TYPEOF("_airbyte_data" -> 'unknown') = 'null') then null else cast("_airbyte_data" -> 'unknown' as varchar) end as decimal(38, 9)) as "unknown", "_airbyte_data" -> 'IMDB URL' #>> '{}' as "IMDB_URL", cast(case when ("_airbyte_data" -> 'Thriller' is null or JSONB_TYPEOF("_airbyte_data" -> 'Thriller') = 'null') then null else cast("_airbyte_data" -> 'Thriller' as varchar) end as decimal(38, 9)) as "Thriller", cast(case when ("_airbyte_data" -> 'Adventure' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adventure') = 'null') then null else cast("_airbyte_data" -> 'Adventure' as varchar) end as decimal(38, 9)) as "Adventure", cast(case when ("_airbyte_data" -> 'Animation' is null or JSONB_TYPEOF("_airbyte_data" -> 'Animation') = 'null') then null else cast("_airbyte_data" -> 'Animation' as varchar) end as decimal(38, 9)) as "Animation", cast(case when ("_airbyte_data" -> 'Film-Noir' is null or JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') = 'null') then null else cast("_airbyte_data" -> 'Film-Noir' as varchar) end as decimal(38, 9)) as "Film_Noir", cast(case when ("_airbyte_data" -> 'Children''s' is null or JSONB_TYPEOF("_airbyte_data" -> 'Children''s') = 'null') then null else cast("_airbyte_data" -> 'Children''s' as varchar) end as decimal(38, 9)) as "Children_s", cast(case when ("_airbyte_data" -> 'Documentary' is null or JSONB_TYPEOF("_airbyte_data" -> 'Documentary') = 'null') then null else cast("_airbyte_data" -> 'Documentary' as varchar) end as decimal(38, 9)) as "Documentary", "_airbyte_data" -> 'Release Date' #>> '{}' as "Release_Date", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_generation_id", JSONB_BUILD_OBJECT('changes', ARRAY_CAT(ARRAY_REMOVE(cast(array[CASE WHEN ("_airbyte_data" -> 'id' is not null and JSONB_TYPEOF("_airbyte_data" -> 'id') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'id' is null or JSONB_TYPEOF("_airbyte_data" -> 'id') = 'null') then null else cast("_airbyte_data" -> 'id' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'id', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'War' is not null and JSONB_TYPEOF("_airbyte_data" -> 'War') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'War' is null or JSONB_TYPEOF("_airbyte_data" -> 'War') = 'null') then null else cast("_airbyte_data" -> 'War' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'War', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb), CASE WHEN ("_airbyte_data" -> 'Crime' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Crime') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Crime' is null or JSONB_TYPEOF("_airbyte_data" -> 'Crime') = 'null') then null else cast("_airbyte_data" -> 'Crime' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Crime', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Drama' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Drama') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Drama' is null or JSONB_TYPEOF("_airbyte_data" -> 'Drama') = 'null') then null else cast("_airbyte_data" -> 'Drama' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Drama', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'index' is not null and JSONB_TYPEOF("_airbyte_data" -> 'index') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'index' is null or JSONB_TYPEOF("_airbyte_data" -> 'index') = 'null') then null else cast("_airbyte_data" -> 'index' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'index', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Action' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Action') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Action' is null or JSONB_TYPEOF("_airbyte_data" -> 'Action') = 'null') then null else cast("_airbyte_data" -> 'Action' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Action', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Comedy' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Comedy') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Comedy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Comedy') = 'null') then null else cast("_airbyte_data" -> 'Comedy' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Comedy', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Horror' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Horror') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Horror' is null or JSONB_TYPEOF("_airbyte_data" -> 'Horror') = 'null') then null else cast("_airbyte_data" -> 'Horror' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Horror', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Sci-Fi' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Sci-Fi' is null or JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') = 'null') then null else cast("_airbyte_data" -> 'Sci-Fi' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Sci-Fi', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Fantasy' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Fantasy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') = 'null') then null else cast("_airbyte_data" -> 'Fantasy' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Fantasy', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Musical' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Musical') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Musical' is null or JSONB_TYPEOF("_airbyte_data" -> 'Musical') = 'null') then null else cast("_airbyte_data" -> 'Musical' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Musical', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Mystery' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Mystery') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Mystery' is null or JSONB_TYPEOF("_airbyte_data" -> 'Mystery') = 'null') then null else cast("_airbyte_data" -> 'Mystery' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Mystery', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Romance' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Romance') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Romance' is null or JSONB_TYPEOF("_airbyte_data" -> 'Romance') = 'null') then null else cast("_airbyte_data" -> 'Romance' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Romance', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Western' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Western') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Western' is null or JSONB_TYPEOF("_airbyte_data" -> 'Western') = 'null') then null else cast("_airbyte_data" -> 'Western' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Western', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'unknown' is not null and JSONB_TYPEOF("_airbyte_data" -> 'unknown') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'unknown' is null or JSONB_TYPEOF("_airbyte_data" -> 'unknown') = 'null') then null else cast("_airbyte_data" -> 'unknown' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'unknown', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb), CASE WHEN ("_airbyte_data" -> 'Thriller' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Thriller') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Thriller' is null or JSONB_TYPEOF("_airbyte_data" -> 'Thriller') = 'null') then null else cast("_airbyte_data" -> 'Thriller' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Thriller', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Adventure' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Adventure') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Adventure' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adventure') = 'null') then null else cast("_airbyte_data" -> 'Adventure' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Adventure', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Animation' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Animation') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Animation' is null or JSONB_TYPEOF("_airbyte_data" -> 'Animation') = 'null') then null else cast("_airbyte_data" -> 'Animation' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Animation', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Film-Noir' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Film-Noir' is null or JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') = 'null') then null else cast("_airbyte_data" -> 'Film-Noir' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Film-Noir', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Children''s' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Children''s') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Children''s' is null or JSONB_TYPEOF("_airbyte_data" -> 'Children''s') = 'null') then null else cast("_airbyte_data" -> 'Children''s' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Children''s', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Documentary' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Documentary') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Documentary' is null or JSONB_TYPEOF("_airbyte_data" -> 'Documentary') = 'null') then null else cast("_airbyte_data" -> 'Documentary' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Documentary', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb)] as jsonb[]), null), ARRAY(SELECT jsonb_array_elements_text("_airbyte_meta"#>'{changes}'))::jsonb[]), 'sync_id', "_airbyte_meta"#>'{sync_id}') as "_airbyte_meta" from "airbyte_internal"."source_raw__stream_movies" where ("_airbyte_loaded_at" is null and "_airbyte_extracted_at" > '2025-01-23T16:50:47Z')), "numbered_rows" as (select *, row_number() over (partition by "id" order by "_airbyte_extracted_at" desc) as "row_number" from "intermediate_data") select "id", "War", "Name", "Crime", "Drama", "index", "Action", "â€¦
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: insert into "source"."movies_airbyte_tmp" ("id", "War", "Name", "Crime", "Drama", "index", "Action", "Comedy", "Horror", "Sci_Fi", "Fantasy", "Musical", "Mystery", "Romance", "Western", "unknown", "IMDB_URL", "Thriller", "Adventure", "Animation", "Film_Noir", "Children_s", "Documentary", "Release_Date", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_generation_id", "_airbyte_meta") with "intermediate_data" as (select cast(case when ("_airbyte_data" -> 'id' is null or JSONB_TYPEOF("_airbyte_data" -> 'id') = 'null') then null else cast("_airbyte_data" -> 'id' as varchar) end as decimal(38, 9)) as "id", cast(case when ("_airbyte_data" -> 'War' is null or JSONB_TYPEOF("_airbyte_data" -> 'War') = 'null') then null else cast("_airbyte_data" -> 'War' as varchar) end as decimal(38, 9)) as "War", "_airbyte_data" -> 'Name' #>> '{}' as "Name", cast(case when ("_airbyte_data" -> 'Crime' is null or JSONB_TYPEOF("_airbyte_data" -> 'Crime') = 'null') then null else cast("_airbyte_data" -> 'Crime' as varchar) end as decimal(38, 9)) as "Crime", cast(case when ("_airbyte_data" -> 'Drama' is null or JSONB_TYPEOF("_airbyte_data" -> 'Drama') = 'null') then null else cast("_airbyte_data" -> 'Drama' as varchar) end as decimal(38, 9)) as "Drama", cast(case when ("_airbyte_data" -> 'index' is null or JSONB_TYPEOF("_airbyte_data" -> 'index') = 'null') then null else cast("_airbyte_data" -> 'index' as varchar) end as decimal(38, 9)) as "index", cast(case when ("_airbyte_data" -> 'Action' is null or JSONB_TYPEOF("_airbyte_data" -> 'Action') = 'null') then null else cast("_airbyte_data" -> 'Action' as varchar) end as decimal(38, 9)) as "Action", cast(case when ("_airbyte_data" -> 'Comedy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Comedy') = 'null') then null else cast("_airbyte_data" -> 'Comedy' as varchar) end as decimal(38, 9)) as "Comedy", cast(case when ("_airbyte_data" -> 'Horror' is null or JSONB_TYPEOF("_airbyte_data" -> 'Horror') = 'null') then null else cast("_airbyte_data" -> 'Horror' as varchar) end as decimal(38, 9)) as "Horror", cast(case when ("_airbyte_data" -> 'Sci-Fi' is null or JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') = 'null') then null else cast("_airbyte_data" -> 'Sci-Fi' as varchar) end as decimal(38, 9)) as "Sci_Fi", cast(case when ("_airbyte_data" -> 'Fantasy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') = 'null') then null else cast("_airbyte_data" -> 'Fantasy' as varchar) end as decimal(38, 9)) as "Fantasy", cast(case when ("_airbyte_data" -> 'Musical' is null or JSONB_TYPEOF("_airbyte_data" -> 'Musical') = 'null') then null else cast("_airbyte_data" -> 'Musical' as varchar) end as decimal(38, 9)) as "Musical", cast(case when ("_airbyte_data" -> 'Mystery' is null or JSONB_TYPEOF("_airbyte_data" -> 'Mystery') = 'null') then null else cast("_airbyte_data" -> 'Mystery' as varchar) end as decimal(38, 9)) as "Mystery", cast(case when ("_airbyte_data" -> 'Romance' is null or JSONB_TYPEOF("_airbyte_data" -> 'Romance') = 'null') then null else cast("_airbyte_data" -> 'Romance' as varchar) end as decimal(38, 9)) as "Romance", cast(case when ("_airbyte_data" -> 'Western' is null or JSONB_TYPEOF("_airbyte_data" -> 'Western') = 'null') then null else cast("_airbyte_data" -> 'Western' as varchar) end as decimal(38, 9)) as "Western", cast(case when ("_airbyte_data" -> 'unknown' is null or JSONB_TYPEOF("_airbyte_data" -> 'unknown') = 'null') then null else cast("_airbyte_data" -> 'unknown' as varchar) end as decimal(38, 9)) as "unknown", "_airbyte_data" -> 'IMDB URL' #>> '{}' as "IMDB_URL", cast(case when ("_airbyte_data" -> 'Thriller' is null or JSONB_TYPEOF("_airbyte_data" -> 'Thriller') = 'null') then null else cast("_airbyte_data" -> 'Thriller' as varchar) end as decimal(38, 9)) as "Thriller", cast(case when ("_airbyte_data" -> 'Adventure' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adventure') = 'null') then null else cast("_airbyte_data" -> 'Adventure' as varchar) end as decimal(38, 9)) as "Adventure", cast(case when ("_airbyte_data" -> 'Animation' is null or JSONB_TYPEOF("_airbyte_data" -> 'Animation') = 'null') then null else cast("_airbyte_data" -> 'Animation' as varchar) end as decimal(38, 9)) as "Animation", cast(case when ("_airbyte_data" -> 'Film-Noir' is null or JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') = 'null') then null else cast("_airbyte_data" -> 'Film-Noir' as varchar) end as decimal(38, 9)) as "Film_Noir", cast(case when ("_airbyte_data" -> 'Children''s' is null or JSONB_TYPEOF("_airbyte_data" -> 'Children''s') = 'null') then null else cast("_airbyte_data" -> 'Children''s' as varchar) end as decimal(38, 9)) as "Children_s", cast(case when ("_airbyte_data" -> 'Documentary' is null or JSONB_TYPEOF("_airbyte_data" -> 'Documentary') = 'null') then null else cast("_airbyte_data" -> 'Documentary' as varchar) end as decimal(38, 9)) as "Documentary", "_airbyte_data" -> 'Release Date' #>> '{}' as "Release_Date", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_generation_id", JSONB_BUILD_OBJECT('changes', ARRAY_CAT(ARRAY_REMOVE(cast(array[CASE WHEN ("_airbyte_data" -> 'id' is not null and JSONB_TYPEOF("_airbyte_data" -> 'id') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'id' is null or JSONB_TYPEOF("_airbyte_data" -> 'id') = 'null') then null else cast("_airbyte_data" -> 'id' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'id', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'War' is not null and JSONB_TYPEOF("_airbyte_data" -> 'War') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'War' is null or JSONB_TYPEOF("_airbyte_data" -> 'War') = 'null') then null else cast("_airbyte_data" -> 'War' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'War', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb), CASE WHEN ("_airbyte_data" -> 'Crime' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Crime') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Crime' is null or JSONB_TYPEOF("_airbyte_data" -> 'Crime') = 'null') then null else cast("_airbyte_data" -> 'Crime' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Crime', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Drama' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Drama') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Drama' is null or JSONB_TYPEOF("_airbyte_data" -> 'Drama') = 'null') then null else cast("_airbyte_data" -> 'Drama' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Drama', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'index' is not null and JSONB_TYPEOF("_airbyte_data" -> 'index') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'index' is null or JSONB_TYPEOF("_airbyte_data" -> 'index') = 'null') then null else cast("_airbyte_data" -> 'index' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'index', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Action' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Action') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Action' is null or JSONB_TYPEOF("_airbyte_data" -> 'Action') = 'null') then null else cast("_airbyte_data" -> 'Action' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Action', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Comedy' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Comedy') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Comedy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Comedy') = 'null') then null else cast("_airbyte_data" -> 'Comedy' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Comedy', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Horror' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Horror') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Horror' is null or JSONB_TYPEOF("_airbyte_data" -> 'Horror') = 'null') then null else cast("_airbyte_data" -> 'Horror' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Horror', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Sci-Fi' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Sci-Fi' is null or JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') = 'null') then null else cast("_airbyte_data" -> 'Sci-Fi' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Sci-Fi', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Fantasy' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Fantasy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') = 'null') then null else cast("_airbyte_data" -> 'Fantasy' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Fantasy', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Musical' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Musical') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Musical' is null or JSONB_TYPEOF("_airbyte_data" -> 'Musical') = 'null') then null else cast("_airbyte_data" -> 'Musical' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Musical', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Mystery' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Mystery') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Mystery' is null or JSONB_TYPEOF("_airbyte_data" -> 'Mystery') = 'null') then null else cast("_airbyte_data" -> 'Mystery' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Mystery', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Romance' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Romance') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Romance' is null or JSONB_TYPEOF("_airbyte_data" -> 'Romance') = 'null') then null else cast("_airbyte_data" -> 'Romance' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Romance', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Western' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Western') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Western' is null or JSONB_TYPEOF("_airbyte_data" -> 'Western') = 'null') then null else cast("_airbyte_data" -> 'Western' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Western', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'unknown' is not null and JSONB_TYPEOF("_airbyte_data" -> 'unknown') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'unknown' is null or JSONB_TYPEOF("_airbyte_data" -> 'unknown') = 'null') then null else cast("_airbyte_data" -> 'unknown' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'unknown', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb), CASE WHEN ("_airbyte_data" -> 'Thriller' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Thriller') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Thriller' is null or JSONB_TYPEOF("_airbyte_data" -> 'Thriller') = 'null') then null else cast("_airbyte_data" -> 'Thriller' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Thriller', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Adventure' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Adventure') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Adventure' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adventure') = 'null') then null else cast("_airbyte_data" -> 'Adventure' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Adventure', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Animation' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Animation') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Animation' is null or JSONB_TYPEOF("_airbyte_data" -> 'Animation') = 'null') then null else cast("_airbyte_data" -> 'Animation' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Animation', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Film-Noir' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Film-Noir' is null or JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') = 'null') then null else cast("_airbyte_data" -> 'Film-Noir' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Film-Noir', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Children''s' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Children''s') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Children''s' is null or JSONB_TYPEOF("_airbyte_data" -> 'Children''s') = 'null') then null else cast("_airbyte_data" -> 'Children''s' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Children''s', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Documentary' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Documentary') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Documentary' is null or JSONB_TYPEOF("_airbyte_data" -> 'Documentary') = 'null') then null else cast("_airbyte_data" -> 'Documentary' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Documentary', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb)] as jsonb[]), null), ARRAY(SELECT jsonb_array_elements_text("_airbyte_meta"#>'{changes}'))::jsonb[]), 'sync_id', "_airbyte_meta"#>'{sync_id}') as "_airbyte_meta" from "airbyte_internal"."source_raw__stream_movies" where ("_airbyte_loaded_at" is null and "_airbyte_extracted_at" > '2025-01-23T16:50:47Z')), "numbered_rows" as (select *, row_number() over (partition by "id" order by "_airbyte_extracted_at" desc) as "row_number" from "intermediate_data") select "id", "War", "Name", "Crime", "Drama", "index", "Action", "Comedy", "Horror", "Sci_Fi", "Fantasy", "Muâ€¦
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: insert into "source"."movies_airbyte_tmp" ("id", "War", "Name", "Crime", "Drama", "index", "Action", "Comedy", "Horror", "Sci_Fi", "Fantasy", "Musical", "Mystery", "Romance", "Western", "unknown", "IMDB_URL", "Thriller", "Adventure", "Animation", "Film_Noir", "Children_s", "Documentary", "Release_Date", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_generation_id", "_airbyte_meta") with "intermediate_data" as (select cast(case when ("_airbyte_data" -> 'id' is null or JSONB_TYPEOF("_airbyte_data" -> 'id') = 'null') then null else cast("_airbyte_data" -> 'id' as varchar) end as decimal(38, 9)) as "id", cast(case when ("_airbyte_data" -> 'War' is null or JSONB_TYPEOF("_airbyte_data" -> 'War') = 'null') then null else cast("_airbyte_data" -> 'War' as varchar) end as decimal(38, 9)) as "War", "_airbyte_data" -> 'Name' #>> '{}' as "Name", cast(case when ("_airbyte_data" -> 'Crime' is null or JSONB_TYPEOF("_airbyte_data" -> 'Crime') = 'null') then null else cast("_airbyte_data" -> 'Crime' as varchar) end as decimal(38, 9)) as "Crime", cast(case when ("_airbyte_data" -> 'Drama' is null or JSONB_TYPEOF("_airbyte_data" -> 'Drama') = 'null') then null else cast("_airbyte_data" -> 'Drama' as varchar) end as decimal(38, 9)) as "Drama", cast(case when ("_airbyte_data" -> 'index' is null or JSONB_TYPEOF("_airbyte_data" -> 'index') = 'null') then null else cast("_airbyte_data" -> 'index' as varchar) end as decimal(38, 9)) as "index", cast(case when ("_airbyte_data" -> 'Action' is null or JSONB_TYPEOF("_airbyte_data" -> 'Action') = 'null') then null else cast("_airbyte_data" -> 'Action' as varchar) end as decimal(38, 9)) as "Action", cast(case when ("_airbyte_data" -> 'Comedy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Comedy') = 'null') then null else cast("_airbyte_data" -> 'Comedy' as varchar) end as decimal(38, 9)) as "Comedy", cast(case when ("_airbyte_data" -> 'Horror' is null or JSONB_TYPEOF("_airbyte_data" -> 'Horror') = 'null') then null else cast("_airbyte_data" -> 'Horror' as varchar) end as decimal(38, 9)) as "Horror", cast(case when ("_airbyte_data" -> 'Sci-Fi' is null or JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') = 'null') then null else cast("_airbyte_data" -> 'Sci-Fi' as varchar) end as decimal(38, 9)) as "Sci_Fi", cast(case when ("_airbyte_data" -> 'Fantasy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') = 'null') then null else cast("_airbyte_data" -> 'Fantasy' as varchar) end as decimal(38, 9)) as "Fantasy", cast(case when ("_airbyte_data" -> 'Musical' is null or JSONB_TYPEOF("_airbyte_data" -> 'Musical') = 'null') then null else cast("_airbyte_data" -> 'Musical' as varchar) end as decimal(38, 9)) as "Musical", cast(case when ("_airbyte_data" -> 'Mystery' is null or JSONB_TYPEOF("_airbyte_data" -> 'Mystery') = 'null') then null else cast("_airbyte_data" -> 'Mystery' as varchar) end as decimal(38, 9)) as "Mystery", cast(case when ("_airbyte_data" -> 'Romance' is null or JSONB_TYPEOF("_airbyte_data" -> 'Romance') = 'null') then null else cast("_airbyte_data" -> 'Romance' as varchar) end as decimal(38, 9)) as "Romance", cast(case when ("_airbyte_data" -> 'Western' is null or JSONB_TYPEOF("_airbyte_data" -> 'Western') = 'null') then null else cast("_airbyte_data" -> 'Western' as varchar) end as decimal(38, 9)) as "Western", cast(case when ("_airbyte_data" -> 'unknown' is null or JSONB_TYPEOF("_airbyte_data" -> 'unknown') = 'null') then null else cast("_airbyte_data" -> 'unknown' as varchar) end as decimal(38, 9)) as "unknown", "_airbyte_data" -> 'IMDB URL' #>> '{}' as "IMDB_URL", cast(case when ("_airbyte_data" -> 'Thriller' is null or JSONB_TYPEOF("_airbyte_data" -> 'Thriller') = 'null') then null else cast("_airbyte_data" -> 'Thriller' as varchar) end as decimal(38, 9)) as "Thriller", cast(case when ("_airbyte_data" -> 'Adventure' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adventure') = 'null') then null else cast("_airbyte_data" -> 'Adventure' as varchar) end as decimal(38, 9)) as "Adventure", cast(case when ("_airbyte_data" -> 'Animation' is null or JSONB_TYPEOF("_airbyte_data" -> 'Animation') = 'null') then null else cast("_airbyte_data" -> 'Animation' as varchar) end as decimal(38, 9)) as "Animation", cast(case when ("_airbyte_data" -> 'Film-Noir' is null or JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') = 'null') then null else cast("_airbyte_data" -> 'Film-Noir' as varchar) end as decimal(38, 9)) as "Film_Noir", cast(case when ("_airbyte_data" -> 'Children''s' is null or JSONB_TYPEOF("_airbyte_data" -> 'Children''s') = 'null') then null else cast("_airbyte_data" -> 'Children''s' as varchar) end as decimal(38, 9)) as "Children_s", cast(case when ("_airbyte_data" -> 'Documentary' is null or JSONB_TYPEOF("_airbyte_data" -> 'Documentary') = 'null') then null else cast("_airbyte_data" -> 'Documentary' as varchar) end as decimal(38, 9)) as "Documentary", "_airbyte_data" -> 'Release Date' #>> '{}' as "Release_Date", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_generation_id", JSONB_BUILD_OBJECT('changes', ARRAY_CAT(ARRAY_REMOVE(cast(array[CASE WHEN ("_airbyte_data" -> 'id' is not null and JSONB_TYPEOF("_airbyte_data" -> 'id') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'id' is null or JSONB_TYPEOF("_airbyte_data" -> 'id') = 'null') then null else cast("_airbyte_data" -> 'id' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'id', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'War' is not null and JSONB_TYPEOF("_airbyte_data" -> 'War') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'War' is null or JSONB_TYPEOF("_airbyte_data" -> 'War') = 'null') then null else cast("_airbyte_data" -> 'War' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'War', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb), CASE WHEN ("_airbyte_data" -> 'Crime' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Crime') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Crime' is null or JSONB_TYPEOF("_airbyte_data" -> 'Crime') = 'null') then null else cast("_airbyte_data" -> 'Crime' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Crime', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Drama' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Drama') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Drama' is null or JSONB_TYPEOF("_airbyte_data" -> 'Drama') = 'null') then null else cast("_airbyte_data" -> 'Drama' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Drama', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'index' is not null and JSONB_TYPEOF("_airbyte_data" -> 'index') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'index' is null or JSONB_TYPEOF("_airbyte_data" -> 'index') = 'null') then null else cast("_airbyte_data" -> 'index' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'index', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Action' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Action') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Action' is null or JSONB_TYPEOF("_airbyte_data" -> 'Action') = 'null') then null else cast("_airbyte_data" -> 'Action' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Action', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Comedy' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Comedy') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Comedy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Comedy') = 'null') then null else cast("_airbyte_data" -> 'Comedy' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Comedy', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Horror' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Horror') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Horror' is null or JSONB_TYPEOF("_airbyte_data" -> 'Horror') = 'null') then null else cast("_airbyte_data" -> 'Horror' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Horror', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Sci-Fi' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Sci-Fi' is null or JSONB_TYPEOF("_airbyte_data" -> 'Sci-Fi') = 'null') then null else cast("_airbyte_data" -> 'Sci-Fi' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Sci-Fi', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Fantasy' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Fantasy' is null or JSONB_TYPEOF("_airbyte_data" -> 'Fantasy') = 'null') then null else cast("_airbyte_data" -> 'Fantasy' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Fantasy', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Musical' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Musical') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Musical' is null or JSONB_TYPEOF("_airbyte_data" -> 'Musical') = 'null') then null else cast("_airbyte_data" -> 'Musical' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Musical', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Mystery' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Mystery') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Mystery' is null or JSONB_TYPEOF("_airbyte_data" -> 'Mystery') = 'null') then null else cast("_airbyte_data" -> 'Mystery' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Mystery', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Romance' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Romance') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Romance' is null or JSONB_TYPEOF("_airbyte_data" -> 'Romance') = 'null') then null else cast("_airbyte_data" -> 'Romance' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Romance', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Western' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Western') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Western' is null or JSONB_TYPEOF("_airbyte_data" -> 'Western') = 'null') then null else cast("_airbyte_data" -> 'Western' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Western', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'unknown' is not null and JSONB_TYPEOF("_airbyte_data" -> 'unknown') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'unknown' is null or JSONB_TYPEOF("_airbyte_data" -> 'unknown') = 'null') then null else cast("_airbyte_data" -> 'unknown' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'unknown', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb), CASE WHEN ("_airbyte_data" -> 'Thriller' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Thriller') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Thriller' is null or JSONB_TYPEOF("_airbyte_data" -> 'Thriller') = 'null') then null else cast("_airbyte_data" -> 'Thriller' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Thriller', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Adventure' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Adventure') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Adventure' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adventure') = 'null') then null else cast("_airbyte_data" -> 'Adventure' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Adventure', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Animation' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Animation') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Animation' is null or JSONB_TYPEOF("_airbyte_data" -> 'Animation') = 'null') then null else cast("_airbyte_data" -> 'Animation' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Animation', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Film-Noir' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Film-Noir' is null or JSONB_TYPEOF("_airbyte_data" -> 'Film-Noir') = 'null') then null else cast("_airbyte_data" -> 'Film-Noir' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Film-Noir', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Children''s' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Children''s') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Children''s' is null or JSONB_TYPEOF("_airbyte_data" -> 'Children''s') = 'null') then null else cast("_airbyte_data" -> 'Children''s' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Children''s', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , CASE WHEN ("_airbyte_data" -> 'Documentary' is not null and JSONB_TYPEOF("_airbyte_data" -> 'Documentary') <> 'null' and "pg_temp"."airbyte_safe_cast"(case when ("_airbyte_data" -> 'Documentary' is null or JSONB_TYPEOF("_airbyte_data" -> 'Documentary') = 'null') then null else cast("_airbyte_data" -> 'Documentary' as varchar) end, cast(null as decimal(38, 9))) is null) THEN JSONB_BUILD_OBJECT('field', 'Documentary', 'change', 'NULLED', 'reason', 'DESTINATION_TYPECAST_ERROR') ELSE cast(null as jsonb) END , cast(null as jsonb)] as jsonb[]), null), ARRAY(SELECT jsonb_array_elements_text("_airbyte_meta"#>'{changes}'))::jsonb[]), 'sync_id', "_airbyte_meta"#>'{sync_id}') as "_airbyte_meta" from "airbyte_internal"."source_raw__stream_movies" where ("_airbyte_loaded_at" is null and "_airbyte_extracted_at" > '2025-01-23T16:50:47Z')), "numbered_rows" as (select *, row_number() over (partition by "id" order by "_airbyte_extracted_at" desc) as "row_number" from "intermediate_data") select "id", "War", "Name", "Crime", "Drama", "index", "Action", "Comedy", "Horror", "Sci_Fi", "Fantasy"â€¦
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: delete from "source"."movies_airbyte_tmp" where "_airbyte_raw_id" in (select "_airbyte_raw_id" from (select "_airbyte_raw_id", row_number() over (partition by "id" order by "_airbyte_extracted_at" desc) as "row_number" from "source"."movies_airbyte_tmp") as "airbyte_ids" where "row_number" <> 1);
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: delete from "source"."movies_airbyte_tmp" where "_airbyte_raw_id" in (select "_airbyte_raw_id" from (select "_airbyte_raw_id", row_number() over (partition by "id" order by "_airbyte_extracted_at" desc) as "row_number" from "source"."movies_airbyte_tmp") as "airbyte_ids" where "row_number" <> 1);
2025-01-23 19:40:44 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: update "airbyte_internal"."source_raw__stream_movies" set "_airbyte_loaded_at" = current_timestamp where ("_airbyte_loaded_at" is null and "_airbyte_extracted_at" > '2025-01-23T16:50:47Z');
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: update "airbyte_internal"."source_raw__stream_movies" set "_airbyte_loaded_at" = current_timestamp where ("_airbyte_loaded_at" is null and "_airbyte_extracted_at" > '2025-01-23T16:50:47Z');
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql 37b5bc6c-d796-4082-92a6-feec0b408fee-8c1fbd3f-e331-4331-a6a3-6b91234f889d completed in 548 ms
2025-01-23 19:40:45 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(commitFinalTables):355 Committing final tables
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(commitFinalTableTask$lambda$8):394 Overwriting final table with tmp table for stream source.movies
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):172 Executing sql aeb7e894-0d41-45e1-bd53-01acf8b93275-31406c21-d115-496d-8396-4202b0b4644f: [drop table if exists "source"."movies";, alter table "source"."movies_airbyte_tmp" rename to "movies";]
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: drop table if exists "source"."movies";
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: drop table if exists "source"."movies";
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):65 executing query within transaction: alter table "source"."movies_airbyte_tmp" rename to "movies";
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.d.j.JdbcDatabase(executeWithinTransaction$lambda$1):69 done executing query within transaction: alter table "source"."movies_airbyte_tmp" rename to "movies";
2025-01-23 19:40:45 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):184 Sql aeb7e894-0d41-45e1-bd53-01acf8b93275-31406c21-d115-496d-8396-4202b0b4644f completed in 42 ms
2025-01-23 19:40:45 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(cleanup):418 Cleaning Up type-and-dedupe thread pool
2025-01-23 19:40:45 [43mdestination[0m > INFO main i.a.c.i.d.a.AsyncStreamConsumer(close):200 class io.airbyte.cdk.integrations.destination.async.AsyncStreamConsumer closed
2025-01-23 19:40:45 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):224 Completed integration: io.airbyte.cdk.integrations.base.ssh.SshWrappedDestination
2025-01-23 19:40:45 [43mdestination[0m > INFO main i.a.i.d.p.PostgresDestination$Companion(main):221 completed destination: class io.airbyte.integrations.destination.postgres.PostgresDestination
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > Destination finished successfully â€” exiting read dest...
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > readFromDestination: done. (writeToDestFailed:false, dest.isFinished:true)
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > thread status... timeout thread: false , replication thread: true
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > Closing StateCheckSumCountEventHandler
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > sync summary: {
  "status" : "completed",
  "recordsSynced" : 0,
  "bytesSynced" : 0,
  "startTime" : 1737661233104,
  "endTime" : 1737661245426,
  "totalStats" : {
    "bytesCommitted" : 521189,
    "bytesEmitted" : 521189,
    "destinationStateMessagesEmitted" : 0,
    "destinationWriteEndTime" : 1737661245297,
    "destinationWriteStartTime" : 1737661233219,
    "meanSecondsBeforeSourceStateMessageEmitted" : 0,
    "maxSecondsBeforeSourceStateMessageEmitted" : 0,
    "maxSecondsBetweenStateMessageEmittedandCommitted" : 0,
    "meanSecondsBetweenStateMessageEmittedandCommitted" : 0,
    "recordsEmitted" : 1344,
    "recordsCommitted" : 1344,
    "replicationEndTime" : 1737661245400,
    "replicationStartTime" : 1737661233104,
    "sourceReadEndTime" : 1737661238007,
    "sourceReadStartTime" : 1737661233224,
    "sourceStateMessagesEmitted" : 0
  },
  "streamStats" : [ {
    "streamName" : "movies",
    "stats" : {
      "bytesCommitted" : 521189,
      "bytesEmitted" : 521189,
      "recordsEmitted" : 1344,
      "recordsCommitted" : 1344
    }
  } ],
  "performanceMetrics" : {
    "processFromSource" : {
      "elapsedTimeInNanos" : 454914752,
      "executionCount" : 1347,
      "avgExecTimeInNanos" : 337724.3890126206
    },
    "readFromSource" : {
      "elapsedTimeInNanos" : 4480777164,
      "executionCount" : 2097,
      "avgExecTimeInNanos" : 2136755.9198855506
    },
    "processFromDest" : {
      "elapsedTimeInNanos" : 0,
      "executionCount" : 0,
      "avgExecTimeInNanos" : "NaN"
    },
    "writeToDest" : {
      "elapsedTimeInNanos" : 1011197623,
      "executionCount" : 1344,
      "avgExecTimeInNanos" : 752379.1837797619
    },
    "readFromDest" : {
      "elapsedTimeInNanos" : 12037653190,
      "executionCount" : 4205,
      "avgExecTimeInNanos" : 2862699.92627824
    }
  }
}
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > failures: [ ]
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > 
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > ----- END REPLICATION -----
2025-01-23 19:40:45 [46mreplication-orchestrator[0m > 
2025-01-23 19:40:46 [46mreplication-orchestrator[0m > Returning output...
2025-01-23 19:39:47 [46mplatform[0m > Executing worker wrapper. Airbyte version: 1.1.0
2025-01-23 19:39:47 [46mplatform[0m > Creating workload 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync
2025-01-23 19:39:48 [46mplatform[0m > Workload 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync is pending
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.c.WorkloadApiClient(claim):75 - Claimed: true for 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync via API for local
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.m.Stage(apply):39 - APPLY Stage: CHECK_STATUS â€” (workloadId = 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync) â€” (dataplaneId = local)
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.CheckStatusStage(applyStage):59 - No pod found running for workload 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.m.Stage(apply):39 - APPLY Stage: BUILD â€” (workloadId = 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync) â€” (dataplaneId = local)
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.m.Stage(apply):39 - APPLY Stage: MUTEX â€” (workloadId = 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync) â€” (dataplaneId = local)
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.EnforceMutexStage(applyStage):54 - Mutex key: 3047bed9-ebfe-4d09-9ab1-3e8364ba0097 specified for workload: 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync. Attempting to delete existing pods...
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.EnforceMutexStage(applyStage):65 - Mutex key: 3047bed9-ebfe-4d09-9ab1-3e8364ba0097 specified for workload: 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync found no existing pods. Continuing...
2025-01-23 19:39:48 [32mINFO[m i.a.w.l.p.s.m.Stage(apply):39 - APPLY Stage: LAUNCH â€” (workloadId = 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync) â€” (dataplaneId = local)
2025-01-23 19:39:49 [32mINFO[m i.a.w.l.p.KubePodClient(launchReplication):84 - Launching replication pod: replication-job-189-attempt-0 with containers:
2025-01-23 19:39:49 [32mINFO[m i.a.w.l.p.KubePodClient(launchReplication):85 - [source] image: airbyte/source-file:0.5.12 resources: ResourceRequirements(claims=[], limits={memory=4Gi, cpu=3}, requests={memory=1Gi, cpu=0.5}, additionalProperties={})
2025-01-23 19:39:49 [32mINFO[m i.a.w.l.p.KubePodClient(launchReplication):86 - [destination] image: airbyte/destination-postgres:2.4.0 resources: ResourceRequirements(claims=[], limits={memory=4Gi, cpu=3}, requests={memory=1Gi, cpu=0.5}, additionalProperties={})
2025-01-23 19:39:49 [32mINFO[m i.a.w.l.p.KubePodClient(launchReplication):87 - [orchestrator] image: airbyte/container-orchestrator:1.1.0 resources: ResourceRequirements(claims=[], limits={memory=4Gi, cpu=3}, requests={memory=2Gi, cpu=1}, additionalProperties={})
2025-01-23 19:40:28 [32mINFO[m i.a.w.l.c.WorkloadApiClient(updateStatusToLaunched):60 - Attempting to update workload: 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync to LAUNCHED.
2025-01-23 19:40:28 [32mINFO[m i.a.w.l.p.h.SuccessHandler(accept):60 - Pipeline completed for workload: 3047bed9-ebfe-4d09-9ab1-3e8364ba0097_189_0_sync.
